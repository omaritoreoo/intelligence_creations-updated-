# Generated by Django 5.2.1 on 2025-06-04 09:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projek', '0003_datasetrequest'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataProcessing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.TextField(help_text='Dari mana data diperoleh (misal: Database SQL, API Eksternal, File CSV)?', verbose_name='Sumber Data')),
                ('cleaning_steps', models.TextField(help_text='Deskripsikan langkah-langkah pembersihan (misal: penanganan missing values, duplikasi, outliers).', verbose_name='Langkah Pembersihan Data')),
                ('transformation_steps', models.TextField(help_text='Deskripsikan transformasi yang dilakukan (misal: normalisasi, standarisasi, one-hot encoding).', verbose_name='Langkah Transformasi Data')),
                ('feature_engineering', models.TextField(blank=True, help_text='Jika ada, jelaskan fitur baru yang dibuat dari data mentah.', null=True, verbose_name='Rekayasa Fitur')),
                ('data_quality_metrics', models.TextField(blank=True, help_text='Metrik apa yang digunakan untuk menilai kualitas data setelah pemrosesan?', null=True, verbose_name='Metrik Kualitas Data')),
                ('processed_data_location', models.CharField(blank=True, help_text='Path atau lokasi penyimpanan data yang sudah diproses.', max_length=255, null=True, verbose_name='Lokasi Data yang Diproses')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_datasets', to=settings.AUTH_USER_MODEL, verbose_name='Diproses Oleh')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_processings', to='projek.project', verbose_name='Proyek Terkait')),
            ],
            options={
                'verbose_name': 'Pemrosesan Data',
                'verbose_name_plural': 'Pemrosesan Data',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IntelligenceEngineering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_objective', models.TextField(help_text='Apa tujuan strategis atau hasil bisnis yang ingin dicapai organisasi dengan implementasi AI ini?', verbose_name='Tujuan Organisasi')),
                ('leading_indicator', models.TextField(help_text='Metrik atau sinyal awal apa yang dapat mengindikasikan kemajuan menuju tujuan organisasi?', verbose_name='Indikator Utama (Leading Indicator)')),
                ('user_outcome', models.TextField(help_text='Apa perubahan positif yang diharapkan pengguna akhir setelah berinteraksi dengan sistem cerdas?', verbose_name='Hasil yang Diinginkan Pengguna (User Outcome)')),
                ('model_properties', models.TextField(help_text='Karakteristik kunci apa yang harus dimiliki model AI (misal: akurasi tinggi, dapat diinterpretasi, skalabilitas, ketahanan)?', verbose_name='Properti Model yang Diinginkan')),
                ('automate', models.TextField(help_text='Bagian mana dari proses atau keputusan yang dapat diotomatisasi oleh sistem cerdas?', verbose_name='Otomatisasi')),
                ('prompt', models.TextField(help_text='Bagaimana sistem akan meminta atau menerima input dari pengguna atau sistem lain untuk menghasilkan kecerdasan?', verbose_name='Pemicu / Pemberian Informasi (Prompt)')),
                ('annotate', models.TextField(help_text='Bagaimana data akan diberi label atau dianotasi untuk melatih atau memvalidasi model AI?', verbose_name='Anotasi / Pelabelan Data')),
                ('organization_of_intelligence', models.TextField(help_text="Bagaimana 'kecerdasan' (misal: rekomendasi, prediksi) akan diorganisasikan atau disajikan kepada pengguna?", verbose_name='Organisasi Kecerdasan')),
                ('system_objective', models.TextField(help_text='Apa tujuan spesifik dari sistem AI yang dirancang (misal: memprediksi churn pelanggan, merekomendasikan produk)?', verbose_name='Tujuan Sistem (System Objective)')),
                ('minimize_flaws', models.TextField(help_text='Strategi apa yang akan diterapkan untuk mengurangi bias atau kekurangan dalam data atau model?', verbose_name='Meminimalkan Kekurangan/Bias')),
                ('create_data', models.TextField(help_text='Bagaimana data yang dibutuhkan akan dikumpulkan, dihasilkan, atau diperoleh?', verbose_name='Strategi Pembuatan Data')),
                ('business_process', models.TextField(help_text='Bagaimana sistem cerdas akan diintegrasikan ke dalam alur kerja dan proses bisnis yang ada?', verbose_name='Integrasi Proses Bisnis')),
                ('technology', models.TextField(help_text='Daftar teknologi, framework, atau platform utama yang akan digunakan (misal: TensorFlow, PyTorch, Azure ML, AWS SageMaker)?', verbose_name='Teknologi yang Digunakan')),
                ('build_process', models.TextField(help_text='Langkah-langkah atau metodologi yang akan diikuti dalam membangun dan melatih model AI.', verbose_name='Proses Pengembangan/Pembangunan')),
                ('development_constraints', models.TextField(help_text='Kendala teknis, sumber daya, atau waktu yang perlu diperhatikan selama pengembangan.', verbose_name='Batasan Pengembangan')),
                ('realization_status', models.TextField(help_text='Status saat ini dari implementasi atau realisasi proyek kecerdasan ini.', verbose_name='Status Realisasi')),
                ('deployment', models.TextField(help_text='Bagaimana model atau sistem AI akan disebarkan ke lingkungan produksi?', verbose_name='Rencana Deployment (Penerapan)')),
                ('maintenance', models.TextField(help_text='Bagaimana sistem AI akan dipelihara dan diperbarui pasca-deployment?', verbose_name='Rencana Pemeliharaan')),
                ('operating_system_environment', models.TextField(help_text='Sistem operasi atau lingkungan komputasi yang akan digunakan untuk menjalankan sistem cerdas.', verbose_name='Lingkungan Sistem Operasi')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='intelligence_engineering', to='projek.project', verbose_name='Proyek Terkait')),
            ],
            options={
                'verbose_name': 'Rekayasa Kecerdasan',
                'verbose_name_plural': 'Rekayasa Kecerdasan',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=200, verbose_name='Nama Model')),
                ('model_type', models.CharField(choices=[('Classification', 'Klasifikasi'), ('Regression', 'Regresi'), ('Clustering', 'Klastering'), ('Recommendation', 'Rekomendasi'), ('NLP', 'Natural Language Processing'), ('ComputerVision', 'Computer Vision'), ('Other', 'Lainnya')], max_length=50, verbose_name='Tipe Model')),
                ('algorithm_used', models.CharField(help_text='Contoh: Random Forest, XGBoost, BERT, ResNet.', max_length=200, verbose_name='Algoritma yang Digunakan')),
                ('hyperparameters', models.TextField(blank=True, help_text='Detail hyperparameter yang digunakan (dalam format JSON atau teks bebas).', null=True, verbose_name='Hyperparameter')),
                ('evaluation_metrics', models.TextField(help_text='Metrik performa model (misal: Akurasi, Presisi, Recall, F1-score, RMSE, MAE, R-squared).', verbose_name='Metrik Evaluasi')),
                ('model_performance', models.TextField(help_text='Nilai spesifik dari metrik evaluasi (misal: Akurasi: 0.92, F1-score: 0.88).', verbose_name='Performa Model')),
                ('training_date', models.DateField(auto_now_add=True, verbose_name='Tanggal Pelatihan')),
                ('model_path', models.CharField(blank=True, help_text='Lokasi penyimpanan file model yang sudah dilatih.', max_length=255, null=True, verbose_name='Path Model Tersimpan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trained_models', to='projek.project', verbose_name='Proyek Terkait')),
                ('trained_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trained_models_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Dilatih Oleh')),
                ('training_data_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trained_models_from_data', to='projek.dataprocessing', verbose_name='Data Pelatihan yang Digunakan')),
            ],
            options={
                'verbose_name': 'Pelatihan Model',
                'verbose_name_plural': 'Pelatihan Model',
                'ordering': ['-training_date'],
            },
        ),
    ]
