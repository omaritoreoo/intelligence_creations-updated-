# Generated by Django 5.2.1 on 2025-06-17 18:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('name', models.CharField(max_length=200, verbose_name='Nama Proyek')),
                ('description', models.TextField(verbose_name='Deskripsi Proyek')),
                ('location', models.CharField(max_length=255, verbose_name='Lokasi')),
                ('start_date', models.DateField(verbose_name='Tanggal Mulai')),
                ('end_date', models.DateField(verbose_name='Tanggal Selesai')),
                ('supervisor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Supervisor Proyek')),
                ('status', models.CharField(choices=[('Ongoing', 'Ongoing'), ('Stop', 'Stop'), ('Done', 'Done')], default='Pending', max_length=50, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Proyek',
                'verbose_name_plural': 'Proyek',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='DatasetRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_problem', models.TextField(help_text='Jelaskan masalah atau konteks yang membutuhkan dataset ini.', verbose_name='Deskripsi Masalah (Kebutuhan Dataset)')),
                ('target_for_dataset', models.TextField(help_text='Untuk tujuan apa dataset ini akan digunakan?', verbose_name='Target / Tujuan (Penggunaan Dataset)')),
                ('type_data_needed', models.CharField(help_text='Contoh: Data Transaksi, Data Sensor, Data Pelanggan, dll.', max_length=100, verbose_name='Tipe Data yang Dibutuhkan')),
                ('data_processing_activity', models.TextField(help_text='Deskripsikan pemrosesan awal yang dibutuhkan (misal: filtering, aggregation, anonymization).', verbose_name='Aktivitas Pemrosesan Data yang Diinginkan')),
                ('num_features', models.IntegerField(blank=True, help_text='Estimasi kolom data yang dibutuhkan.', null=True, verbose_name='Estimasi Jumlah Fitur')),
                ('dataset_size', models.CharField(blank=True, help_text='Contoh: 100GB, 1 Juta Baris, dll.', max_length=100, null=True, verbose_name='Estimasi Ukuran Dataset')),
                ('file_format', models.CharField(choices=[('CSV', 'CSV'), ('JSON', 'JSON'), ('SQL', 'SQL Dump'), ('Excel', 'Excel (XLSX)'), ('Other', 'Lainnya')], max_length=50, verbose_name='Format File yang Diinginkan')),
                ('start_date_needed', models.DateField(verbose_name='Tanggal Mulai Dibutuhkan')),
                ('end_date_needed', models.DateField(blank=True, help_text='Tanggal batas akhir data yang dibutuhkan (jika historis).', null=True, verbose_name='Tanggal Selesai Dibutuhkan')),
                ('status', models.CharField(choices=[('Ongoing', 'Ongoing'), ('Stop', 'Stop'), ('Done', 'Done')], default='Pending', max_length=50, verbose_name='Status Permintaan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_datasets', to=settings.AUTH_USER_MODEL, verbose_name='Diminta Oleh')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_requests', to='projek.project', verbose_name='Proyek Terkait')),
            ],
            options={
                'verbose_name': 'Permintaan Dataset',
                'verbose_name_plural': 'Permintaan Dataset',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('bio', models.TextField(blank=True)),
                ('til', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProblemFraming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_description', models.TextField(help_text='Jelaskan masalah bisnis yang ingin diselesaikan.', verbose_name='Deskripsi Masalah (Problem Statement)')),
                ('target_goal', models.TextField(help_text='Apa yang ingin dicapai secara terukur dengan solusi cerdas?', verbose_name='Target / Tujuan (Goal)')),
                ('stock_initial_state', models.TextField(blank=True, help_text='Deskripsikan kondisi awal entitas yang relevan dengan masalah (misal: jumlah inventory saat ini).', null=True, verbose_name='Stock (Kondisi/Ketersediaan Awal)')),
                ('input_inflow_description', models.TextField(blank=True, help_text='Data/informasi apa yang masuk dan memengaruhi masalah? (misal: data transaksi, harga pasar, pesanan baru).', null=True, verbose_name='Input Inflow')),
                ('output_outflow_description', models.TextField(blank=True, help_text='Hasil atau efek apa yang diharapkan dari sistem cerdas? (misal: rekomendasi, prediksi penjualan, deteksi anomali).', null=True, verbose_name='Output Outflow')),
                ('key_features_data', models.TextField(help_text='Variabel atau atribut data apa yang penting untuk model sistem cerdas?', verbose_name='Fitur Kunci / Data yang Diperlukan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('framed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='framed_problems', to=settings.AUTH_USER_MODEL, verbose_name='Di-frame oleh')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='problem_framing', to='projek.project', verbose_name='Proyek Terkait')),
            ],
            options={
                'verbose_name': 'Problem Framing',
                'verbose_name_plural': 'Problem Framing',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IntelligenceEngineering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id_ie', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('mo_organizational', models.TextField(blank=True, null=True)),
                ('mo_leading_indicators', models.TextField(blank=True, null=True)),
                ('mo_user_outcomes', models.TextField(blank=True, null=True)),
                ('mo_model_properties', models.TextField(blank=True, null=True)),
                ('ie_automate', models.TextField(blank=True, null=True)),
                ('ie_prompt', models.TextField(blank=True, null=True)),
                ('ie_annotate', models.TextField(blank=True, null=True)),
                ('ie_organization', models.TextField(blank=True, null=True)),
                ('ie_system_objectives', models.TextField(blank=True, null=True)),
                ('ie_minimize_flaws', models.TextField(blank=True, null=True)),
                ('ie_create_data', models.TextField(blank=True, null=True)),
                ('ii_business_process', models.TextField(blank=True, null=True)),
                ('ii_technology', models.TextField(blank=True, null=True)),
                ('ii_build_process', models.TextField(blank=True, null=True)),
                ('bd_limitation', models.TextField(blank=True, null=True)),
                ('sr_realization', models.TextField(blank=True, null=True)),
                ('pr_deployment', models.TextField(blank=True, null=True)),
                ('pr_maintenance', models.TextField(blank=True, null=True)),
                ('pr_operating', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='intelligence_engineering', to='projek.project')),
            ],
            options={
                'verbose_name': 'Intelligence Engineering',
                'verbose_name_plural': 'Intelligence Engineering Entries',
            },
        ),
        migrations.CreateModel(
            name='DatasetReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Pesan Balasan')),
                ('original_sender_email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Pengirim Asli (Eksternal)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Waktu Balasan')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dataset_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='projek.datasetrequest', verbose_name='Permintaan Dataset Terkait')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_replies', to='projek.project', verbose_name='Proyek Terkait')),
            ],
            options={
                'verbose_name': 'Balasan Dataset',
                'verbose_name_plural': 'Balasan Dataset',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataProcessing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source_description', models.TextField(help_text="Misal: 'Data dari Database Penjualan', 'File Excel Hasil Survei Pelanggan'", verbose_name='Deskripsi Sumber Data')),
                ('processing_steps_summary', models.TextField(blank=True, help_text='Catatan ringkas tentang bagaimana data dibersihkan (duplikat, nilai hilang) dan diubah (normalisasi, agregasi).', null=True, verbose_name='Ringkasan Langkah Pembersihan & Transformasi')),
                ('feature_engineering_details', models.TextField(blank=True, help_text='Bagaimana fitur-fitur baru dibuat dari data mentah untuk model.', null=True, verbose_name='Detail Rekayasa Fitur')),
                ('processed_data_location', models.CharField(blank=True, help_text='Path atau URL tempat data yang sudah bersih dan siap pakai disimpan.', max_length=255, null=True, verbose_name='Lokasi File Data Diproses')),
                ('processed_file', models.FileField(blank=True, null=True, upload_to='processed_data_files/', verbose_name='File Data Diproses')),
                ('status', models.CharField(choices=[('in_progress', 'Dalam Proses'), ('completed', 'Selesai'), ('failed', 'Gagal')], default='in_progress', max_length=20, verbose_name='Status Pemrosesan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Diproses Oleh')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_processings', to='projek.project', verbose_name='Proyek Terkait')),
            ],
            options={
                'verbose_name': 'Pemrosesan Data',
                'verbose_name_plural': 'Pemrosesan Data',
            },
        ),
        migrations.CreateModel(
            name='TrainingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100, verbose_name='Nama Model')),
                ('model_type', models.CharField(choices=[('classification', 'Klasifikasi'), ('regression', 'Regresi'), ('clustering', 'Clustering'), ('nlp', 'Natural Language Processing'), ('cv', 'Computer Vision'), ('other', 'Lain-lain')], max_length=50, verbose_name='Tipe Model')),
                ('algorithm_used', models.CharField(blank=True, max_length=100, null=True, verbose_name='Algoritma Digunakan')),
                ('model_performance', models.JSONField(help_text="Metrik utama performa model (misal: {'accuracy': 0.89, 'f1_score': 0.85})", verbose_name='Performa Model')),
                ('model_path', models.CharField(blank=True, help_text='Path atau URL penyimpanan file model terlatih.', max_length=255, null=True, verbose_name='Lokasi File Model')),
                ('refining_strategy', models.TextField(blank=True, help_text="Jelaskan strategi untuk meningkatkan performa model (misal: 'Hyperparameter tuning dengan Grid Search', 'Penambahan data augmentasi').", null=True, verbose_name='Strategi Penyempurnaan Model')),
                ('refining_status', models.CharField(choices=[('not_needed', 'Tidak Dibutuhkan'), ('in_progress', 'Dalam Proses'), ('completed', 'Selesai'), ('failed', 'Gagal')], default='not_needed', max_length=20, verbose_name='Status Penyempurnaan')),
                ('refined_performance', models.JSONField(blank=True, help_text='Metrik performa model setelah penyempurnaan, jika ada.', null=True, verbose_name='Performa Setelah Penyempurnaan')),
                ('training_date', models.DateTimeField(auto_now_add=True, verbose_name='Tanggal Pelatihan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_models', to='projek.project', verbose_name='Proyek Terkait')),
                ('trained_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Dilatih Oleh')),
                ('training_data_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='models_trained_with', to='projek.dataprocessing', verbose_name='Data Pelatihan Digunakan')),
            ],
            options={
                'verbose_name': 'Pelatihan Model',
                'verbose_name_plural': 'Pelatihan Model',
            },
        ),
    ]
